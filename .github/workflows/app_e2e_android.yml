name: e2e-android
on:
  push:
    branches:
      - develop
    paths:
      - "app/e2e/**"
      - ".github/workflows/app_e2e_android.yml"
      - "app/app/**"
      - "app/patches/**"
      - "app/App.js"
      - "app/yarn.lock"
      - "app/.env*"
      - "app/*.json"
      - "app/*config.js"
defaults:
  run:
    working-directory: app
jobs:
  e2e-android:
    runs-on: ubuntu-latest
    env:
      API_LEVEL: 33
      ARCH: x86_64
      DETOX_CONFIGURATION: android.release

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: yarn
          cache-dependency-path: ./app/yarn.lock

      - name: Enable KVM
        if: runner.os == 'Linux'
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Install Yarn dependencies
        run: yarn

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      # - name: Gradle cache
      #   uses: gradle/actions/setup-gradle@v3

      # - name: AVD cache # not working, waste time for both macOS, Ubuntu
      #   uses: actions/cache@v4
      #   id: avd-cache
      #   with:
      #     path: |
      #       ~/.android/avd/*
      #       ~/.android/adb*
      #     key: avd-${{ env.API_LEVEL }}
      #     save-always: true

      # - name: Detox build cache # save-always not working (bug)
      #   id: detox-build-cache
      #   uses: actions/cache@v4
      #   with:
      #     path: android/app/build
      #     key: ${{ runner.os }}-detox-build
      #     save-always: true

      - name: Detox build cache (get)
        id: detox-build-cache-get
        uses: actions/cache/restore@v3
        with:
          path: app/android/app/build
          key: ${{ runner.os }}-detox-build-${{ env.DETOX_CONFIGURATION }}-${{ hashFiles('app/app/**', 'app/patches/**', 'app/App.js', 'app/yarn.lock','app/.env*', 'app/*.json', 'app/*config.js') }}

      - name: Prebuild Expo
        if: steps.detox-build-cache-get.outputs.cache-hit != 'true'
        run: NODE_ENV=test npx expo prebuild --platform android --clean

      - name: Detox build
        id: detox-build
        if: steps.detox-build-cache-get.outputs.cache-hit != 'true'
        run: yarn detox build --configuration ${{ env.DETOX_CONFIGURATION }}

      - name: Detox build cache (set)
        id: detox-build-cache-set
        uses: actions/cache/save@v3
        if: always() && steps.detox-build-cache-get.outputs.cache-hit != 'true' && steps.detox-build.outcome == 'success'
        with:
          path: app/android/app/build
          key: ${{ steps.detox-build-cache-get.outputs.cache-primary-key }}

      - name: Clean up disk space
        if: steps.detox-build-cache-get.outputs.cache-hit != 'true'
        run: |
          sudo swapoff -a
          sudo rm -f /swapfile
          sudo apt-get clean
          if [ "$(docker image ls -aq)" ]; then
            docker rmi $(docker image ls -aq)
          else
            echo "No Docker images to remove."
          fi
          df -h

      - name: Get device name
        id: device
        run: node -e "console.log('AVD_NAME=' + require('./detox.config.js').devices.emulator.device.avdName)" >> $GITHUB_OUTPUT

      - name: Detox test
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ env.API_LEVEL }}
          arch: ${{ env.ARCH }}
          avd-name: ${{ steps.device.outputs.AVD_NAME }}
          disable-animations: true
          target: google_apis
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          force-avd-creation: false
          working-directory: app/
          script: yarn detox test --configuration ${{ env.DETOX_CONFIGURATION }} --headless # --loglevel trace

      - name: Upload artifacts
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: detox-artifacts-${{ env.DETOX_CONFIGURATION }}
          path: app/artifacts
