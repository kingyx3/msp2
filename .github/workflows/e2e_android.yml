name: e2e-android
on:
  push:
    branches:
      - "**"
    paths:
      - "app/e2e/**"
      - ".github/workflows/**"
defaults:
  run:
    working-directory: app
jobs:
  e2e-android:
    runs-on: macos-latest
    env:
      API_LEVEL: 33
      ARCH: x86_64
      DETOX_CONFIGURATION: android.release

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: yarn
          cache-dependency-path: ./app/yarn.lock

      - name: Install Yarn dependencies
        run: yarn

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          cache: gradle
          distribution: temurin
          java-version: 17

      - name: Prebuild Expo
        run: npx expo prebuild --platform android

      - name: Gradle cache
        uses: gradle/gradle-build-action@v2

      # - name: AVD cache
      #   uses: actions/cache@v4
      #   id: avd-cache
      #   with:
      #     path: |
      #       ~/.android/avd/*
      #       ~/.android/adb*
      #     key: avd-${{ env.API_LEVEL }}
      #     save-always: true

      - name: AVD cache (get)
        uses: actions/cache/restore@v3
        id: avd-cache-get
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ env.API_LEVEL }}

      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache-get.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ env.API_LEVEL }}
          arch: ${{ env.ARCH }}
          disable-animations: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          force-avd-creation: false
          script: echo 'Generated AVD snapshot for caching.'

      - name: AVD cache (set)
        uses: actions/cache/save@v3
        id: avd-cache-set
        if: always() && steps.avd-cache-get.outputs.cache-hit != 'true'
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ env.API_LEVEL }}

      # - name: Detox build cache
      #   id: detox-build-cache
      #   uses: actions/cache@v4
      #   with:
      #     path: android/app/build
      #     key: ${{ runner.os }}-detox-build
      #     save-always: true

      - name: Detox build cache (get)
        id: detox-build-cache-get
        uses: actions/cache/restore@v3
        with:
          path: android/app/build
          key: ${{ runner.os }}-detox-build
      - name: Detox build
        if: steps.detox-build-cache-get.outputs.cache-hit != 'true'
        run: yarn detox build --configuration ${{ env.DETOX_CONFIGURATION }}

      - name: Detox build cache (set)
        id: detox-build-cache-set
        uses: actions/cache/save@v3
        if: always() && steps.detox-build-cache-get.outputs.cache-hit != 'true'
        with:
          path: android/app/build
          key: ${{ runner.os }}-detox-build

      - name: Get device name
        id: device
        run: node -e "console.log('AVD_NAME=' + require('./detox.config.js').devices.emulator.device.avdName)" >> $GITHUB_OUTPUT

      - name: Detox test
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ env.API_LEVEL }}
          arch: ${{ env.ARCH }}
          avd-name: ${{ steps.device.outputs.AVD_NAME }}
          disable-animations: true
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          force-avd-creation: false
          script: cd app && yarn detox test --configuration ${{ env.DETOX_CONFIGURATION }} --headless --record-logs all --take-screenshots failing

      - name: Upload artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: detox-artifacts
          path: artifacts
